#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
language=$(ynh_app_setting_get --app=$app --key=language)
admin=$(ynh_app_setting_get --app=$app --key=admin)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
db_name=$(ynh_app_setting_get --app=$app --key=db_name)
db_user=$db_name
db_pwd=$(ynh_app_setting_get --app=$app --key=mysqlpwd)
port=$(ynh_app_setting_get --app=$app --key=port)

coop_name=$(ynh_app_setting_get --app=$app --key=coop_name)
street_address=$(ynh_app_setting_get --app=$app --key=street_address)
zip_code=$(ynh_app_setting_get --app=$app --key=zip_code)
city=$(ynh_app_setting_get --app=$app --key=city)
country=$(ynh_app_setting_get --app=$app --key=country)
contact_email=$(ynh_app_setting_get --app=$app --key=contact_email)
contact_number=$(ynh_app_setting_get --app=$app --key=contact_number)
timezone=$(ynh_app_setting_get --app=$app --key=timezone)
price_markup=$(ynh_app_setting_get --app=$app --key=price_markup)
tax_vat_percentage=$(ynh_app_setting_get --app=$app --key=tax_vat_percentage)
use_wiki_plugin=$(ynh_app_setting_get --app=$app --key=use_wiki_plugin)
use_messages_plugin=$(ynh_app_setting_get --app=$app --key=use_messages_plugin)
notification_sender_email=$(ynh_app_setting_get --app=$app --key=notification_sender_email)
notification_reply_email=$(ynh_app_setting_get --app=$app --key=notification_reply_email)
admin_email=$(ynh_app_setting_get --app=$app --key=admin_email)
smtp_domain=$(ynh_app_setting_get --app=$app --key=smtp_domain)
secret_key_base=$(ynh_app_setting_get --app=$app --key=secret_key_base)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..."

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	ynh_clean_check_starting
	# Restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action="stop" --log_path=systemd --line_match="Stopped"
ynh_systemd_action --service_name=resque --action="stop" --log_path=systemd --line_match="Stopped"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

# Cleaning legacy permissions
if ynh_legacy_permissions_exists; then
	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

ynh_secure_remove --file="/home/$app"

if test -f "/etc/systemd/system/foodsoft.env"; then
    mv "/etc/systemd/system/foodsoft.env" "$final_path/foodsoft.env"
fi

if test -f "/etc/systemd/system/resque.env"; then
    mv "/etc/systemd/system/resque.env" "$final_path/resque.env"
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$final_path" --keep="config/app_config.yml config/database.yml config/storage.yml foodsoft.env resque.env"
fi

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..."

ynh_install_app_dependencies $pkg_dependencies $build_pkg_dependencies
ynh_install_ruby --ruby_version=$ruby_version
ynh_install_extra_app_dependencies --repo="deb https://dl.yarnpkg.com/debian/ stable main" --package="yarn" --key="https://dl.yarnpkg.com/debian/pubkey.gpg"

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..."

# Note(decentral1se): Handle YAML truthiness
if [ $use_wiki_plugin = 0 ]; then
  use_wiki_plugin="False"
else
  use_wiki_plugin="True"
fi

# Note(decentral1se): Handle YAML truthiness
if [ $use_messages_plugin = 0 ]; then
  use_messages_plugin="False"
else
  use_messages_plugin="True"
fi

ynh_add_config --template="../conf/app_config.yml" --destination="$final_path/config/app_config.yml"
ynh_add_config --template="../conf/storage.yml" --destination="$final_path/config/storage.yml"

queue_name=$app
smtp_domain=$smtp_domain
smtp_address=$app@$smtp_domain
smtp_port=25
smtp_user_name=$app

# TODO(decentral1se): figure out what to do here
smtp_password=__TODO__

redis_url="redis://localhost:6379"

ynh_app_setting_set --app=$app --key=queue_name --value=$queue_name

ynh_add_config --template="../conf/foodsoft.env" --destination="$final_path/foodsoft.env"
ynh_add_config --template="../conf/resque.env" --destination="$final_path/resque.env"

#=================================================
# INSTALL APPLICATION DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing Ruby $ruby_version dependencies..." --weight=50

ynh_use_ruby

pushd $final_path
  #gem install --no-document bundler -v "~> 1"
  #gem install --no-document passenger -v "~> 6"
  bundle config build.nokogiri "--use-system-libraries"
  bundle install --deployment --without development test -j 2
popd

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# RUN DATABASE MIGRATION WITH APPLICATION USER
#=================================================
ynh_script_progression --message="Migrating the database..." --weight=10

ynh_add_config --template="../conf/db_prod.yml" --destination="$final_path/config/database.yml"
pushd $final_path
  bundle exec rake db:migrate RAILS_ENV=production SECRET_KEY_BASE=$secret_key_base
popd

#=================================================
# PRE-COMPILE ASSETS
#=================================================
ynh_script_progression --message="Pre-compiling application assets..." --weight=40

pushd $final_path
  bundle exec rake assets:precompile RAILS_ENV=production SECRET_KEY_BASE=$secret_key_base
popd

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:$app "$final_path"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=1

ynh_add_systemd_config --service=$app --template=foodsoft.service
ynh_add_systemd_config --service=resque  --template=resque.service

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --logfile=$final_path/log/passenger.$port.log
ynh_use_logrotate --logfile=$final_path/log/production.log

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $app --description "$app daemon" --log=$final_path/log/passenger.$port.log
yunohost service add resque --description "resque daemon" --log=$final_path/log/production.log

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path=systemd --line_match="Started"
ynh_systemd_action --service_name=resque --action="start" --log_path=systemd --line_match="Started"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
